scene-ego-start(){
    #add xhost permissions for docker to use display
    xhost +local:docker
    echo "added docker xhost permissions"
    export UID_GID=$(id -u):$(id -g)
    export UNAME=$(whoami)
    echo "gathering host user info... $UNAME $UID_GID"
    docker compose -f /home/regal/docker_projects/scene_ego/Docker/docker-compose.yaml up -d
}

scene-ego-stop(){
    # stop the container and remove it
    docker compose -f /home/regal/docker_projects/scene_ego/Docker/docker-compose.yaml down
}

scene-ego-rm(){
    # remove the docker image
    docker image rm -f scene_ego_i
}

scene-ego-shell() {
    # open a shell in the container
    docker exec -ti -u $USER -w ~/ scene_ego_c bash -l
}

scene-ego-build() {
    # if the container is running, stop it
    if [ "$(docker ps -q -f name=scene_ego_c)" ]; then
        echo "stopping container scene_ego_c..."
        docker compose -f /home/regal/docker_projects/scene_ego/Docker/docker-compose.yaml down
    fi
    # build the container from the docker-compose file
    docker compose -f /home/regal/docker_projects/scene_ego/Docker/docker-compose.yaml build
}

scene-ego-dir() {
    # Set the directory of the docker_workshop repo on the host
	# Usage: rosd-dir path_to_rosd_docker_dir
	# Alternatively, add it to your .bashrc for convenience
    export SCENE_EGO_GIT_DIR=$1
}

scene-ego-log() {
    # view the logs of the picogk container
    docker logs scene_ego_c
}